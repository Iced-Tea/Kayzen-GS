//-----------------------------------------------------------------
// Custom Column
//-----------------------------------------------------------------

@mixin column($config: ()) {

	//-------------------------------------------------------------
	// Config
	//-------------------------------------------------------------
	
	$config: map-merge((
		width        : full, 
		type         : null, 
		namespace    : kgs-option(col-namespace), 
		stack        : kgs-option(col-collapse), 
		mobile-first : setting(mobile-first),
		respond-to   : null
	), $config);
	
	$config: $config !global;
	
	$span: null;
	$columns: null; 
    
	//-------------------------------------------------------------
	// Prepare Grid
	//-------------------------------------------------------------
    
    // if 'width' is a fraction e.g. 'quarter'
	@if type-of(config(width)) == string {
		$span: nth(fraction(config(width)), 1);
		$columns: nth(fraction(config(width)), 2);
	} 
    
    // if 'width' is a percentage e.g. 25%
    @else if type-of(config(width)) == number {
		$span: config(width);
		$columns: 100;	
	} 
    
    // if 'width' is a (span, columns) format e.g. (3, 12)
    @else if type-of(config(width)) == list {
		$span: nth(config(width), 1);
		$columns: nth(config(width), 2);	
	}
    
	//-------------------------------------------------------------
	// Set Column Width
	//-------------------------------------------------------------
    
    // if flow column
    @else if config(type) == flow {
		width: flow-column-width($span, $columns);
	} 
	
    // if magic column
	@if config(type) == magic {
        &:first-child {
            margin-left: 0;
            @for $i from 1 through $columns {
                &:nth-last-child(#{$i}) {
                    &, ~ .#{config('namespace')} {
                        width: magic-column-width($i);
                    }
                }
            }
        }
	}
    
    // all other column types
    @else {		
        width: column-width($span, $columns);
	}
    
	//-------------------------------------------------------------
	// Adaptive Widths
	//-------------------------------------------------------------
	
    @if config(respond-to) {
        
        @each $width, $breakpoint in config(respond-to) {
            
            $columns: null;	
            $span: null; 
            
            $respond-scale: if(
                config(mobile-first), min, max
            );
            
            @media (#{$respond-scale}-width: breakpoint($breakpoint)) {
                
                // if 'width' is a fraction e.g. 'quarter'
                @if type-of($width) == string {
                    $span: nth(fraction($width), 1);
                    $columns: nth(fraction($width), 2);
                } 
                
                // if 'width' is a percentage e.g. 25%
                @else if type-of($width) == number {
                    $span: $width;
                    $columns: 100;
                } 
                
                // if 'width' is a (span, columns) format e.g. (3, 12)
                @else if type-of($width) == list {
                    $span: nth($width, 1);
                    $columns: nth($width, 2);			
                }
                
                // if flow column
                @if config(type) == 'flow' {
                    width: flow-column-width($span, $columns);	
                } 
                
                // all other column types
                @else {	
                    width: column-width($span, $columns);	
                }
                        
            }
                
        }
        
    }
	
} // @mixin column