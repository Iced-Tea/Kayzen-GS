.#{option('row-namespace')},
[class*="#{option('row-namespace')}--"] {    
    @include row-core;
}

.#{option('row-namespace')} {
    
    // Default Columns
    //-------------------------------------------------------------
    
    @if (option(mobile-first), '&:not([class*="break"])', '&') {
        @if setting(mobile-first) {
            @media (min-width: option(col-collapse)) {
                @include default-columns;
            }
        } @else {
            @include default-columns; 
            &:not([class*="break"]) {
                @media (max-width: option(col-collapse)) {
                    @include stack-columns;
                }
            }
        }
    }

    @each $bp, $width in map-get-deep($grid, breakpoints) {
        &.#{option('row-namespace')}--#{$bp} {
            @if setting(mobile-first) {
                @media (#{$scale}-width: $width) {
                    @include default-columns;
                }
            } @else {
                @media (#{$scale}-width: $width) {
                    @include stack-columns;
                }
            }
        }
    }
        
    
    // Flow Columns
    //-------------------------------------------------------------
    
    &--flow {
        
        margin-left: -#{option(gutter)};
        width: 100% + option(gutter);
        
        @if (option(mobile-first), '&:not([class*="break"])', '&') {
            @if setting(mobile-first) {
                @media (min-width: option(col-collapse)) {
                    @include flow-columns;
                }
            } @else {
                @include flow-columns;
                > [class*="#{option(col-namespace)}"] {
                    margin-left: #{option(gutter)};
                } 
                &:not([class*="break"]) {
                    @media (max-width: option(col-collapse)) {
                        @include stack-columns($flow: true);
                    }
                }
            }
        }
    
        @each $bp, $width in map-get-deep($grid, breakpoints) {
            &.#{option('row-namespace')}--#{$bp} {
                @if setting(mobile-first) {
                    @media (#{$scale}-width: $width) {
                        @include flow-columns;
                    }
                } @else {
                    @media (#{$scale}-width: $width) {
                        @include stack-columns($flow: true);
                    }
                }
            }
        }
        
        // Adaptive Columns     
        @include adaptive-column;
        
    }
    
    // Magic Columns
    //-------------------------------------------------------------
    
    &--magic {
        
        @if (option(mobile-first), '&:not([class*="break"])', '&') {
            
            @if setting(mobile-first) {
                @media (min-width: option(col-collapse)) {
                    @include magic-columns;
                }
            } @else {
                @include magic-columns;
                &:not([class*="break"]) {
                    @media (max-width: option(col-collapse)) {
                        @include stack-columns;
                    }
                }
            }
            
            @each $bp, $width in map-get-deep($grid, breakpoints) {
                &.#{option('row-namespace')}--#{$bp} {
                    @if setting(mobile-first) {
                        @media (#{$scale}-width: $width) {
                            @include magic-columns;
                        }
                    } @else {
                        @media (#{$scale}-width: $width) {
                            @include stack-columns;
                        }
                    }
                }
            }
            
        }
        
    } // &--magic
    
    // No Gutter Columns
    //-------------------------------------------------------------
    
    // Block Columns
    //-------------------------------------------------------------
    
    &--block {
        
        @if (option(mobile-first), '&:not([class*="break"])', '&') {
            @if setting(mobile-first) {
                @media (min-width: option(col-collapse)) {
                    @include block-columns;
                }
            } @else {
                @include block-columns;
                &:not([class*="break"]) {
                    @media (max-width: option(col-collapse)) {
                        @include stack-columns;
                    }
                }
            }
        }
        
        @each $bp, $width in map-get-deep($grid, breakpoints) {
            &.#{option('row-namespace')}--#{$bp} {
                @if setting(mobile-first) {
                    @media (#{$scale}-width: $width) {
                        @include block-columns;
                    }
                } @else {
                    @media (#{$scale}-width: $width) {
                        @include stack-columns;
                    }
                }
            }
        }
        
    } // &--block
    
    // Reverse Column Order
    //-------------------------------------------------------------

    &--reverse {
        
        &:not([class*="reverse-break"]) {
            @include reverse-order;
        }
                    
        @each $bp, $width in map-get-deep($grid, breakpoints) {
            @media (#{$scale}-width: $width) {
                &.reverse-#{$bp} {
                    @include reverse-order;
                }
            }
        }
        
    }
    
}

    
// Custom Push/Pull
//-------------------------------------------------------------

@include custom-pull;
@include custom-push;