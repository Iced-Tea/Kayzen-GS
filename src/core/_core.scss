/*-----------------------------------------------------------------

Kayzen GS
Made by @esr360
https://github.com/esr360/Kayzen-GS
	
-----------------------------------------------------------------*/

// Reset Spacing
* {        
    letter-spacing: normal;
    word-spacing: normal;
    text-rendering: auto;
}

@if kgs-setting('kayzen-gs') {
    
//-----------------------------------------------------------------
// Row
//-----------------------------------------------------------------

.#{kgs-option('row-namespace')},
[class*="#{kgs-option('row-namespace')}--"] {
    @include kgs-row-core;
}

//-----------------------------------------------------------------
// Column Types
//-----------------------------------------------------------------

.#{kgs-option('row-namespace')} {
    
    // Default Columns
    //-------------------------------------------------------------
    
    @if (kgs-option(mobile-first), '&:not([class*="break"])', '&') {
        @if kgs-setting(mobile-first) {
            @media (min-width: kgs-option(col-collapse)) {
                @include kgs-default-columns;
            }
        } @else {
            @include kgs-default-columns; 
            &:not([class*="break"]) {
                @media (max-width: kgs-option(col-collapse)) {
                    @include kgs-stack-columns;
                }
            }
        }
    }

    @each $bp, $width in kayzenGS(breakpoints) {
        &.#{kgs-option('row-namespace')}--#{$bp} {
            @if kgs-setting(mobile-first) {
                @media (#{$kgs-scale}-width: $width) {
                    @include kgs-default-columns;
                }
            } @else {
                @media (#{$kgs-scale}-width: $width) {
                    @include kgs-stack-columns;
                }
            }
        }
    }
        
    
    // Flow Columns
    //-------------------------------------------------------------
    
    &--flow {
        
        margin-left: -#{kgs-option(gutter)};
        width: calc(100% + kgs-option(gutter));
        
        @include kgs-pull(flow);
        @include kgs-push(flow);
        
        @if (kgs-option(mobile-first), '&:not([class*="break"])', '&') {
            @if kgs-setting(mobile-first) {
                @media (min-width: kgs-option(col-collapse)) {
                    @include kgs-flow-columns;
                }
            } @else {
                @include kgs-flow-columns;
                > [class*="#{kgs-option(col-namespace)}"] {
                    margin-left: #{kgs-option(gutter)};
                } 
                &:not([class*="break"]) {
                    @media (max-width: kgs-option(col-collapse)) {
                        @include kgs-stack-columns($type: flow);
                    }
                }
            }
        }
    
        @each $bp, $width in kayzenGS(breakpoints) {
            &.#{kgs-option('row-namespace')}--#{$bp} {
                @if kgs-setting(mobile-first) {
                    @media (#{$kgs-scale}-width: $width) {
                        @include kgs-flow-columns;
                    }
                } @else {
                    @media (#{$kgs-scale}-width: $width) {
                        @include kgs-stack-columns($type: flow);
                    }
                }
            }
        }
        
        // Adaptive Columns     
        @include kgs-adaptive-columns;
        
    }
    
    // Magic Columns
    //-------------------------------------------------------------
    
    &--magic {
        
        @if (kgs-option(mobile-first), '&:not([class*="break"])', '&') {
            
            @if kgs-setting(mobile-first) {
                @media (min-width: kgs-option(col-collapse)) {
                    @include kgs-magic-columns;
                }
            } @else {
                @include kgs-magic-columns;
                &:not([class*="break"]) {
                    @media (max-width: kgs-option(col-collapse)) {
                        @include kgs-stack-columns($type: magic);
                    }
                }
            }
            
            @each $bp, $width in kayzenGS(breakpoints) {
                &.#{kgs-option('row-namespace')}--#{$bp} {
                    @if kgs-setting(mobile-first) {
                        @media (#{$kgs-scale}-width: $width) {
                            @include kgs-magic-columns;
                        }
                    } @else {
                        @media (#{$kgs-scale}-width: $width) {
                            @include kgs-stack-columns($type: magic);
                        }
                    }
                }
            }
            
        }
        
    } // &--magic
    
    // No Gutter Columns
    //-------------------------------------------------------------
    
    &--no-gutter {
        
        @include kgs-pull(no-gutter);
        @include kgs-push(no-gutter);
        @include kgs-no-gutter-columns;
        
    }
    
    // Block Columns
    //-------------------------------------------------------------
    
    &--block {
        
        @if (kgs-option(mobile-first), '&:not([class*="break"])', '&') {
            @if kgs-setting(mobile-first) {
                @media (min-width: kgs-option(col-collapse)) {
                    @include kgs-block-columns;
                }
            } @else {
                @include kgs-block-columns;
                &:not([class*="break"]) {
                    @media (max-width: kgs-option(col-collapse)) {
                        @include kgs-stack-columns;
                    }
                }
            }
        }
        
        @each $bp, $width in kayzenGS(breakpoints) {
            &.#{kgs-option('row-namespace')}--#{$bp} {
                @if kgs-setting(mobile-first) {
                    @media (#{$kgs-scale}-width: $width) {
                        @include kgs-block-columns;
                    }
                } @else {
                    @media (#{$kgs-scale}-width: $width) {
                        @include kgs-stack-columns;
                    }
                }
            }
        }
        
    } // &--block
    
    // Reverse Column Order
    //-------------------------------------------------------------

    &--reverse {
        
        &:not([class*="reverse-break"]) {
            @include kgs-reverse-order;
        }
                    
        @each $bp, $width in kayzenGS(breakpoints) {
            @media (#{$kgs-scale}-width: $width) {
                &.reverse-#{$bp} {
                    @include kgs-reverse-order;
                }
            }
        }
        
    }
    
}
    
//-----------------------------------------------------------------
// Custom Push/Pull
//-----------------------------------------------------------------

@include kgs-pull;
@include kgs-push;

}